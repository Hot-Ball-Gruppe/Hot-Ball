Pseudocode-Ball Carrier KI
k=1;
g=0;
Liste4=[0,0,0,0]
Liste4a=[0,0,0,0]
Liste5=[0,0,0,0,0]
sum=0;
if (Chance to Score >x%)
	%Anmerkung: Richtungsvektor ist Korbposi-Spielerposi
	k=1;
	for i=1:5 
		if (Radiusfunktion(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0
			do nothing
		else
			k=0;
	end
	if k=1
		Wirf zu Punkt (Korb)
	else
		Bandenfunktion(Ballposi)
		k=1;
		for i=1:5
			if (Banden-Radiusfunktion1(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0 
				 if (Banden-Radiusfunktion2(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0
					do nothing
				else
					k=0;
			else
				k=0;
		end
		if k=1
			Wirf zu BandenPunkt
		else
			Teilbaum A
		
else 
	$TeilBaum A:
		Ballposi(1)=Ballposi + (pixelanzahl, 0)
		Ballposi(2)=Ballposi + (0, pixelanzahl)
		Ballposi(3)=Ballposi + (-pixelanzahl, 0)
		Ballposi(4)=Ballposi + (0, -pixelanzahl)
		for i=1:4
			k=1;
			for j=1:5 
				if (Radiusfunktion(gegnerischer Spielerposi(j), Richtungsvektor, Ballposi(i))- Tackelzoneradius)>0
					do nothing
				else
					k=0;
			end
			if k=1
				Laufe zu Ballposi(i)
				g=1;
				break;
			else
				do nothing
		end
		if g=1
			do nothing
		else
			%Anmerkung: Richtungsvektor ist Korbposi-Spielerposi(j)
			k=1;
			for j=1:4
				for i=1:5 
					if (Radiusfunktion(gegnerischer Spielerposi(i), Richtungsvektor, Spielerposi(j))- Tackelzoneradius)>0
						do nothing
					else
						k=0;
				end
				if k=0
					k=1;
					for i=1:5
					if (Banden-Radiusfunktion1(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0 
						if (Banden-Radiusfunktion2(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0
							do nothing
					else
						k=0;
						else
							k=0;
					end
					if k=1
						Liste4(j)=1;
					else
						do nothing
				else
					Liste4(j)=1;
			sum=sum+Liste4(j);		
			end
			if (sum>0)
			sum=0;
			%Anmerkung: Richtungsvektor ist Ballposi-Spielerposi(j)
				k=1;
				for j=1:4
					for i=1:5 
						if (Radiusfunktion(gegnerischer Spielerposi(i), Richtungsvektor, Spielerposi(j))- Tackelzoneradius)>0
							do nothing
						else
							k=0;
					end
					if k=0
						k=1;
						for i=1:5
						if (Banden-Radiusfunktion1(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0 
							if (Banden-Radiusfunktion2(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0
								do nothing
						else
							k=0;
							else
								k=0;
						end
						if k=1
							Liste4a(j)=1;
						else
							do nothing
					else
						Liste4a(j)=1;
				if Liste4(j)+Liste4a(j)=2
					Liste4(j)=2
					sum=sum+1;
				else
					do nothing
				end
				if (sum>0)
					for i=1:4
						if Liste4(i)=2
							Liste4a(i)=Ballposi-Spielerposi(i)
						else
							Liste4a(i)=9000;
					end
					nahesterSpieler=Minimun(Liste4a), davon der Index;
					Wirf zu Spielerposition(nahesterSpieler)
				else
					Teilbaum B
			if (du stehst in gegnerischer Tackelzone)
				Richtungsvekor=DeinePosition-Spielerposi(in dessen Tackelzone du stehst);
				Laufe zu DeinePosition+Richtungsvektor;
			else
				$TeilBaum B:
					if (du bist DefensivSpieler)
						%Anmerkung: Richtungsvektor ist Ballposi-Spielerposi(j)
						k=1;
						for j=1:4
							for i=1:5 
								if (Radiusfunktion(gegnerischer Spielerposi(i), Richtungsvektor, Spielerposi(j))- Tackelzoneradius)>0
								do nothing
							else
								k=0;
							end
							if k=0
								k=1;
								for i=1:5
									if (Banden-Radiusfunktion1(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0 
										if (Banden-Radiusfunktion2(gegnerischer Spielerposi(i), Richtungsvektor)- Tackelzoneradius)>0	
										do nothing
										else
											k=0;
									else
										k=0;
								end
								if k=1
									Liste4a(j)=1;
								else
									do nothing
							else
								Liste4a(j)=1;
							if Liste4(j)+Liste4a(j)=2
								Liste4(j)=2
								sum=sum+1;
							else
								do nothing
							end
				if (sum>0)
					for i=1:4
						if Liste4(i)=2
							Liste4a(i)=Ballposi-Spielerposi(i)
						else
							Liste4a(i)=9000;
					end
					nahesterSpieler=Minimun(Liste4a), davon der Index;
					Wirf zu Spielerposition(nahesterSpieler)
				else
					else
				


					
				
			

				
		
